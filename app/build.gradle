apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.acap.pkg.manager"
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0.1"
    }

    signingConfigs {
        release {
            storeFile file('./default.jks')
            storePassword "x123456"
            keyAlias "key0"
            keyPassword "x123456"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    buildFeatures {
        viewBinding = true
    }

    def out_prefix = 'APKMANAGER'
    android.applicationVariants.all { variant ->
        def rootProjectDir = rootProject.projectDir.absolutePath
        def buildTypes = variant.buildType.name
        def version = "${variant.versionName}_${variant.versionCode}"

        def name = "${out_prefix}-v${version}-${releaseTime()}-${buildTypes}"
        def apk_name = "${name}.apk"    // 目标文件名
        def dir_out = "${rootProjectDir}\\release\\${project.name}\\${version}"          // 目标目录

        if ("release" == buildTypes) {
            //打包配置
            variant.outputs.forEach { it.outputFileName = apk_name }
            //打包完成
            variant.assemble.doLast {
                println("================= 打包完成 =================")
                println("| buildTypes:" + buildTypes)
                println("| flavorName:" + variant.flavorName)

                variant.outputs.forEach { file ->
                    println("| in apk:" + file.outputFile)
                    //APK
                    copy {
                        from file.outputFile
                        into new File(dir_out)
                    }
                }

                println("| out dir:" + dir_out)
                println("================= 打包完成 =================")

            }
        }
    }

}

dependencies {
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.6.21"

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'


    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    implementation 'com.github.ftmtshuashua:EventChain:2.0.2'
    implementation 'com.github.ftmtshuashua:BaseRecyclerViewAdapter:1.0.14'
    implementation 'com.github.ftmtshuashua:ToolKit:3.0.0-alpha'
    implementation 'com.tencent:mmkv-static:1.2.10'


    def room_version = "2.3.0"
    implementation "androidx.room:room-ktx:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
}